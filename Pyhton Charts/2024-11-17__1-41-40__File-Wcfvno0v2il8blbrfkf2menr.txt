Conversation URL:
https://chatgpt.com/c/674ada8d-86dc-8011-a90c-b8c1e6ac3d14

Title:


Prompt:
import matplotlib.pyplot as plt

def kulik_pi_recursive(iteration, sides=6, radius=1):
    """Recursive calculation of Pi approximation."""
    if iteration == 0:
        # Base case: Hexagon approximation
        side_length = 2 * radius * math.sin(math.pi / sides)
        perimeter = sides * side_length
        return perimeter / (2 * radius)

    # Recursive step: Refine the polygon
    new_sides = sides * 2
    side_length = 2 * radius * math.sin(math.pi / new_sides)
    perimeter = new_sides * side_length
    pi_approximation = perimeter / (2 * radius)

    # Apply bias correction (recursive correction)
    correction = (math.pi - pi_approximation) * 0.5  # Simple correction factor
    pi_approximation += correction

    return kulik_pi_recursive(iteration - 1, new_sides, radius)

# Generate recursive approximations
recursive_iterations = 10
recursive_approximations = [kulik_pi_recursive(i) for i in range(recursive_iterations)]

# Plot the recursive results
plt.figure(figsize=(8, 5))
plt.plot(range(1, recursive_iterations + 1), recursive_approximations, marker='o', label="Recursive Approximation")
plt.axhline(math.pi, color='r', linestyle='--', label="Actual Pi")
plt.title("Recursive Approximation of Pi")
plt.xlabel("Iteration")
plt.ylabel("Pi Approximation")
plt.legend()
plt.grid()
plt.show()