Conversation URL:
https://chatgpt.com/c/67e05ac3-1c74-8011-9356-9394c4c34643

Title:


Prompt:
# Extend the byte lengths to go beyond 2048, up to 65536 (2^16)
extended_byte_lengths = [2 ** i for i in range(2, 17)]  # From 4 to 65536

# Use the full extended_pi_digits_str to analyze up to 65536 digits
pi_digits_extended = [int(d) for d in extended_pi_digits_str if d.isdigit()][:65536]

# Recalculate odd/even ratios for each extended byte length
extended_odd_ratios = []
extended_even_ratios = []

for length in extended_byte_lengths:
    segment = pi_digits_extended[:length]
    odd = sum(1 for d in segment if d % 2 != 0)
    even = length - odd
    extended_odd_ratios.append(odd / length)
    extended_even_ratios.append(even / length)

# Plotting the extended byte analysis
bar_width = 0.35
x = range(len(extended_byte_lengths))

plt.figure(figsize=(16, 6))
plt.bar(x, extended_odd_ratios, width=bar_width, label="Odd Ratio")
plt.bar([i + bar_width for i in x], extended_even_ratios, width=bar_width, label="Even Ratio")
plt.xticks([i + bar_width / 2 for i in x], [str(l) for l in extended_byte_lengths], rotation=45)
plt.xlabel("Byte Size (Number of Pi Digits)")
plt.ylabel("Ratio")
plt.title("Odd vs Even Ratios in Pi by Byte Size Expansion (Up to 65536 Digits)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()