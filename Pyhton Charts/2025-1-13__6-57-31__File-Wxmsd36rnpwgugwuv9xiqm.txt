Conversation URL:
https://chatgpt.com/c/6783e51d-5e68-8011-b329-8a8024db41fb

Title:


Prompt:
import numpy as np
import matplotlib.pyplot as plt

def compute_bbp_pi(n_terms):
    """
    Compute the approximation of pi using the Bailey–Borwein–Plouffe (BBP) formula.

    Args:
        n_terms (int): Number of terms in the BBP series.

    Returns:
        float: Approximation of pi.
        list: Partial sums of pi for each term.
    """
    pi_approx = 0
    partial_sums = []
    for k in range(n_terms):
        term = (1 / (16**k)) * (
            4 / (8*k + 1) - 2 / (8*k + 4) - 1 / (8*k + 5) - 1 / (8*k + 6)
        )
        pi_approx += term
        partial_sums.append(pi_approx)
    return pi_approx, partial_sums

def visualize_bbp_convergence(n_terms):
    """
    Visualize the convergence of the BBP formula for pi.

    Args:
        n_terms (int): Number of terms in the BBP series.
    """
    _, partial_sums = compute_bbp_pi(n_terms)
    actual_pi = np.pi
    errors = [abs(actual_pi - approx) for approx in partial_sums]

    # Plot partial sums of pi
    plt.figure(figsize=(10, 6))
    plt.plot(partial_sums, label='BBP Approximation of π', color='blue', linewidth=2)
    plt.axhline(y=np.pi, color='red', linestyle='--', label='Actual π')
    plt.title("Convergence of BBP Formula for π")
    plt.xlabel("Number of Terms")
    plt.ylabel("Value of π")
    plt.legend()
    plt.grid(True)
    plt.show()

    # Plot convergence error
    plt.figure(figsize=(10, 6))
    plt.plot(errors, label='Convergence Error', color='green', linewidth=2)
    plt.yscale('log')
    plt.title("Convergence Error of BBP Formula for π")
    plt.xlabel("Number of Terms")
    plt.ylabel("Error (log scale)")
    plt.legend()
    plt.grid(True)
    plt.show()

# Visualize convergence for 50 terms of the BBP formula
visualize_bbp_convergence(50)