Conversation URL:
https://chatgpt.com/c/683b3e84-3748-8011-829e-a71c8b872f9e

Title:


Prompt:
import matplotlib.pyplot as plt
import matplotlib.patches as patches

# Combined sequence as given
sequence = [1, 3, 4, 3, 4, 1, 1, 1, 2, 2, 5, 5, 5, 9, 6, 6, 2, 4, 4, 6, 5, 5, 5, 4]

# Normalize sequence for color mapping (0â€“1 scale)
normalized = [(x - min(sequence)) / (max(sequence) - min(sequence)) for x in sequence]

# Create custom colormap based on triads
colors = []
for i in range(0, len(sequence), 3):
    triad = sequence[i:i+3]
    if len(triad) < 3:
        triad += [0] * (3 - len(triad))  # pad if not a full triad
    r = int(triad[0] / 9 * 255)
    g = int(triad[1] / 9 * 255)
    b = int(triad[2] / 9 * 255)
    hex_color = f"#{r:02x}{g:02x}{b:02x}"
    colors.extend([hex_color] * 3)

# Trim to sequence length
colors = colors[:len(sequence)]

# Plot the color bands
fig, ax = plt.subplots(figsize=(12, 2))
for i, color in enumerate(colors):
    rect = patches.Rectangle((i, 0), 1, 1, facecolor=color)
    ax.add_patch(rect)

ax.set_xlim(0, len(sequence))
ax.set_ylim(0, 1)
ax.axis('off')
plt.title("Triadic Color Bands from Byte Sequences", fontsize=14)
plt.tight_layout()
plt.show()