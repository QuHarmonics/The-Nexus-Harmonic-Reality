Conversation URL:
https://chatgpt.com/c/67ee8ac1-c9dc-8011-a945-14678c9247ae

Title:


Prompt:
import matplotlib.pyplot as plt
import numpy as np

# Define the recursive Pi-Glider path
# We'll use 1 -> 4 as base, then propagate a few glider steps

# Base points (1,0) and (4,3)
p1 = np.array([0, 0])
p2 = np.array([1, 3])  # difference (1 unit forward, 3 up)
p3 = np.array([2, 0])  # mirrored triangle down (glider step)

# Define more points using recursive pattern
# Even steps go straight, odd steps angle up/down

points = [p1, p2, p3]
for i in range(4):  # create 4 more recursive steps
    last = points[-1]
    if i % 2 == 0:
        new_point = last + np.array([1, 3])
    else:
        new_point = last + np.array([1, -3])
    points.append(new_point)

# Convert to array for plotting
points = np.array(points)

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(points[:, 0], points[:, 1], marker='o', linestyle='-', linewidth=2)
for i, pt in enumerate(points):
    plt.text(pt[0], pt[1] + 0.2, f'{i}', ha='center')

# Triangles (wings)
for i in range(len(points) - 2):
    triangle = np.array([points[i], points[i+1], points[i+2], points[i]])
    plt.plot(triangle[:, 0], triangle[:, 1], linestyle='--', alpha=0.5)

plt.title("Pi-Glider: Recursive Harmonic Flight Path")
plt.xlabel("Forward Progression")
plt.ylabel("Recursive Lift")
plt.grid(True)
plt.axis('equal')
plt.show()