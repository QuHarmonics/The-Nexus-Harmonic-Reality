Conversation URL:
https://chatgpt.com/c/67c40c27-881c-8011-9de3-364712c8e071

Title:


Prompt:
import hashlib
import numpy as np

# Function to compute SHA-256 hash and convert to numeric values
def sha256_numeric_hash(text):
    hash_obj = hashlib.sha256(text.encode())
    hex_digest = hash_obj.hexdigest()
    numeric_values = np.array([int(hex_digest[i:i+2], 16) for i in range(0, len(hex_digest), 2)])
    return numeric_values

# Compute SHA-256 numeric representation for "Hello" and "Goodbye"
sha_hello = sha256_numeric_hash("Hello")
sha_goodbye = sha256_numeric_hash("Goodbye")

# Compute Quantum Noise Relativity (QNR) on SHA-256 outputs
qnr_hello = np.diff(sha_hello) / (1 + np.abs(sha_hello[:-1]))  # Normalized noise pattern
qnr_goodbye = np.diff(sha_goodbye) / (1 + np.abs(sha_goodbye[:-1]))  # Normalized noise pattern

# Visualizing QNR patterns
plt.figure(figsize=(10, 5))
plt.plot(qnr_hello, label="QNR of SHA(Hello)", linestyle="-", marker="o")
plt.plot(qnr_goodbye, label="QNR of SHA(Goodbye)", linestyle="--", marker="s")
plt.xlabel("Byte Index")
plt.ylabel("Quantum Noise Relative Change")
plt.title("Quantum Noise Relativity (QNR) of SHA-256 Hashes")
plt.legend()
plt.grid()
plt.show()