Conversation URL:
https://chatgpt.com/c/680315f1-ff84-8011-9942-7adfa4298d11

Title:
Comparison of Old and New Kinetic Energy Models with Experimental Data

Prompt:
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import ace_tools as tools

# Example input data (replace with actual experimental values as needed)
m = 1.0  # mass in kg
v = 10.0  # velocity in m/s
γ = 1.05  # example Lorentz factor
c = 3e8  # speed of light in m/s

# Simulated values for angular velocity and radius
real_omega_values = np.linspace(0.1, 2.0, 10)
real_r_values = np.linspace(0.5, 1.5, 10)
real_ke_values = 0.5 * m * v**2 + 0.5 * m * real_omega_values**2 * real_r_values**2  # simulate
theoretical_ke_values = 0.5 * m * v**2 * np.ones_like(real_omega_values)  # old model

# 1. New Classical KE Formula incorporating circular motion
def modified_classical_ke(m, v, ω, r):
    linear_ke = 0.5 * m * v**2
    circular_ke = 0.5 * m * ω**2 * r**2
    return linear_ke + circular_ke

# 2. New Relativistic KE Formula incorporating circular motion
def modified_relativistic_ke(m, γ, c, v, ω, r):
    base_ke = (γ - 1) * m * c**2
    circular_ke = 0.5 * m * ω**2 * r**2
    return base_ke + circular_ke

# 3. Quantum rotational energy approximation
def quantum_spin_energy(m, ω, r):
    I = 0.5 * m * r**2
    return 0.5 * I * ω**2

# Compute updated KE values
updated_ke_classical = np.array([modified_classical_ke(m, v, ω, r) for ω, r in zip(real_omega_values, real_r_values)])
updated_ke_relativistic = np.array([modified_relativistic_ke(m, γ, c, v, ω, r) for ω, r in zip(real_omega_values, real_r_values)])
quantum_rotational_energy = np.array([quantum_spin_energy(m, ω, r) for ω, r in zip(real_omega_values, real_r_values)])

# Plot comparison
plt.figure(figsize=(10, 6))
plt.plot(real_omega_values, real_ke_values, label="Experimental KE", marker='o', linestyle='-', color='red')
plt.plot(real_omega_values, theoretical_ke_values, label="Theoretical KE (Old)", marker='x', linestyle='--', color='blue')
plt.plot(real_omega_values, updated_ke_classical, label="Updated Classical KE", marker='s', linestyle='-', color='green')
plt.plot(real_omega_values, updated_ke_relativistic, label="Updated Relativistic KE", marker='d', linestyle='-', color='purple')
plt.xlabel("ω (Angular Velocity)")
plt.ylabel("Kinetic Energy (Joules)")
plt.title("Comparison of Old and New Kinetic Energy Models with Experimental Data")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Compute mean squared error
mse_updated_ke = np.mean((real_ke_values - updated_ke_classical) ** 2)

# Create DataFrame for display
df_updated_ke = pd.DataFrame({
    "ω (Angular Velocity)": real_omega_values,
    "r (Radius)": real_r_values,
    "Experimental KE": real_ke_values,
    "Old Theoretical KE": theoretical_ke_values,
    "Updated Classical KE": updated_ke_classical,
    "Updated Relativistic KE": updated_ke_relativistic,
    "Quantum Spin Energy": quantum_rotational_energy
})

tools.display_dataframe_to_user(name="Updated Kinetic Energy Models", dataframe=df_updated_ke)

mse_updated_ke