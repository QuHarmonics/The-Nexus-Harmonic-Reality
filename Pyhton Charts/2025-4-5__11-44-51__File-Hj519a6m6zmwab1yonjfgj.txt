Conversation URL:
https://chatgpt.com/c/67ee8ac1-c9dc-8011-a945-14678c9247ae

Title:


Prompt:
import numpy as np
import matplotlib.pyplot as plt

# Parameters
steps = 200               # number of time steps
angle = 0.0               # initial angle of movement
velocity = 1.0            # base speed
beta = 0.1                # gain factor for internally-generated deviation
correction_strength = 0.2 # how much correction applies from past

# Initialize trajectory
x = [0]
y = [0]
angles = [angle]

for t in range(1, steps):
    # Internal deviation based on recursive curvature (change of change)
    if t > 2:
        curvature = (angles[-1] - angles[-2]) - (angles[-2] - angles[-3])
    else:
        curvature = 0

    deviation = curvature * beta

    # Feedback correction from past trend
    past_trend = angles[-1] - angles[-2] if t > 1 else 0

    # New angle from recursive feedback only
    new_angle = angles[-1] + deviation - correction_strength * past_trend
    angles.append(new_angle)

    # Move in the new direction
    x.append(x[-1] + velocity * np.cos(new_angle))
    y.append(y[-1] + velocity * np.sin(new_angle))

# Plot the trajectory
plt.figure(figsize=(8, 6))
plt.plot(x, y, marker='o', markersize=2, linewidth=1.5, color='darkgreen')
plt.title("Recursive Agent: Moving Without a Goal (Fully Internal Deviation)")
plt.xlabel("X Position")
plt.ylabel("Y Position")
plt.grid(True)
plt.axis('equal')
plt.tight_layout()
plt.show()