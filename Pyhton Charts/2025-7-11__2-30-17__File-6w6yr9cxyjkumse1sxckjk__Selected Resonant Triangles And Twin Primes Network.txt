Conversation URL:
https://chatgpt.com/c/686ebde1-4f94-8011-a001-3f45525a1d50

Title:
Selected Resonant Triangles and Twin Primes Network

Prompt:
import matplotlib.pyplot as plt
import networkx as nx

# Initialize the graph
G = nx.Graph()

# Sample resonant triangle and twin prime data for demonstration
triangles = [
    {'id': '31|8', 'type': 'triangle'},
    {'id': '114|4', 'type': 'triangle'},
    {'id': '110|30', 'type': 'triangle'},
    {'id': '283|9', 'type': 'triangle'}
]

twin_primes = [
    {'id': 'TP:8385371,8385373', 'type': 'twin_prime'},
    {'id': 'TP:6960197,6960199', 'type': 'twin_prime'},
    {'id': 'TP:9228877,9228829', 'type': 'twin_prime'},
    {'id': 'TP:3907547,3907549', 'type': 'twin_prime'}
]

# Add triangle and twin prime nodes
for tri in triangles:
    G.add_node(tri['id'], type='triangle')

for tp in twin_primes:
    G.add_node(tp['id'], type='twin_prime')

# Edges based on user input visualization
edges = [
    ('31|8', 'TP:8385371,8385373'),
    ('114|4', 'TP:6960197,6960199'),
    ('110|30', 'TP:9228877,9228829'),
    ('283|9', 'TP:3907547,3907549')
]

# Add edges
G.add_edges_from(edges)

# Position layout
pos = nx.spring_layout(G, seed=42)

# Color nodes by type
colors = ['skyblue' if G.nodes[n]['type'] == 'triangle' else 'salmon' for n in G.nodes]

# Draw graph
plt.figure(figsize=(12, 8))
nx.draw_networkx(G, pos, with_labels=True, node_color=colors, font_size=10, node_size=400)
plt.title("Selected Resonant Triangles and Twin Primes Network")
plt.axis('off')
plt.tight_layout()
plt.show()