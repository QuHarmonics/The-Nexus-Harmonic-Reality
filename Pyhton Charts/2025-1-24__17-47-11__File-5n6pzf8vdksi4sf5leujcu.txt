Conversation URL:
https://chatgpt.com/c/679297ab-7814-8011-953e-78ffd525d657

Title:


Prompt:
# Analyze peaks from the top and side views to determine if they can reveal the folded data

# Extract peaks from the top view (highest Z values for each X-Y pair)
top_peaks = np.max(Z_interaction, axis=0)  # Maximum amplitude along the Y-axis for each X-axis value

# Extract peaks from the side view (highest Z values for each Y-X pair)
side_peaks = np.max(Z_interaction, axis=1)  # Maximum amplitude along the X-axis for each Y-axis value

# Visualize the extracted peaks
fig, axs = plt.subplots(2, 1, figsize=(12, 8))

# Top peaks
axs[0].plot(range(len(top_peaks)), top_peaks, label="Top View Peaks", color="blue")
axs[0].set_title("Top View Peaks (Z max for each X)")
axs[0].set_xlabel("X Index")
axs[0].set_ylabel("Amplitude")
axs[0].grid(True)
axs[0].legend()

# Side peaks
axs[1].plot(range(len(side_peaks)), side_peaks, label="Side View Peaks", color="green")
axs[1].set_title("Side View Peaks (Z max for each Y)")
axs[1].set_xlabel("Y Index")
axs[1].set_ylabel("Amplitude")
axs[1].grid(True)
axs[1].legend()

plt.tight_layout()
plt.show()

# Analyze correlation between peaks and original waveform
correlation_top = np.corrcoef(top_peaks, waveform_y[:len(top_peaks)])[0, 1]
correlation_side = np.corrcoef(side_peaks, waveform_y[:len(side_peaks)])[0, 1]

{
    "Correlation with Top Peaks": correlation_top,
    "Correlation with Side Peaks": correlation_side
}