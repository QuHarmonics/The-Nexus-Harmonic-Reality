Conversation URL:
https://chatgpt.com/c/67e05ac3-1c74-8011-9356-9394c4c34643

Title:


Prompt:
# Segment the first 2048 digits of Pi after the decimal
# This sample will use the first 2048 digits directly from an extended known string

extended_pi_digits_str = (
    "141592653589793238462643383279502884197169399375105820974944592307816406286"
    "208998628034825342117067982148086513282306647093844609550582231725359408128"
    "481117450284102701938521105559644622948954930381964428810975665933446128475"
    "648233786783165271201909145648566923460348610454326648213393607260249141273"
    "724587006606315588174881520920962829254091715364367892590360011330530548820"
    "466521384146951941511609433057270365759591953092186117381932611793105118548"
    "074462379962749567351885752724891227938183011949129833673362440656643086021"
    "394946395224737190702179860943702770539217176293176752384674818467669405132"
    "000568127145263560827785771342757789609173637178721468440901224953430146549"
    "585371050792279689258923542019956112129021960864034418159813629774771309960"
    "518707211349999998372978049951059731732816096318595024459455346908302642522"
    "308253344685035261931188171010003137838752886587533208381420617177669147303"
    "598253490428755468731159562863882353787593751957781857780532171226806613001"
    "927876611195909216420198938095257201065485863278865936153381827968230301952"
    "035301852968995773622599413891249721775283479131515574857242454150695950829"
    "533116861727855889075098381754637464939319255060400927701671139009848824012"
    "858361603563707660104710181942955596198946767837449448255379774726847104047"
    "534646208046684259069491293313677028989152104752162056966024058038150193511"
)

# Prepare segment sizes (byte lengths): 4, 8, 16, 32, ..., 2048
byte_sizes = [2 ** i for i in range(2, 12)]
odd_counts_bytes = []
even_counts_bytes = []

# Analyze each byte segment separately
for size in byte_sizes:
    segment = [int(d) for d in extended_pi_digits_str[:size]]
    odd = sum(1 for d in segment if d % 2 != 0)
    even = size - odd
    odd_counts_bytes.append(odd)
    even_counts_bytes.append(even)

# Plotting
plt.figure(figsize=(14, 6))
plt.plot(byte_sizes, odd_counts_bytes, label="Odd Digits", marker='o')
plt.plot(byte_sizes, even_counts_bytes, label="Even Digits", marker='o')
plt.title("Odd vs Even Digit Counts by Byte Size (Pi Digits Starting at 0.1415...)")
plt.xlabel("Byte Size (Digits)")
plt.ylabel("Count")
plt.xscale("log", base=2)
plt.xticks(byte_sizes, byte_sizes)
plt.legend()
plt.grid(True)
plt.show()