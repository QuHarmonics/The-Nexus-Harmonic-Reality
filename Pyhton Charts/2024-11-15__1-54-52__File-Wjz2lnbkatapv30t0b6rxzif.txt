Conversation URL:
https://chatgpt.com/c/674ada8d-7990-8011-a5b4-1474d46314a2

Title:


Prompt:
# Re-import necessary libraries and redefine setup after reset
import numpy as np
import matplotlib.pyplot as plt

# Define parameters for the chaos-driven instability simulation
num_samples = 100  # Number of sample systems to simulate
density_range = np.linspace(0.1, 10, num_samples)  # Range of densities to test (arbitrary units)
unstable_fraction_range = np.linspace(0.1, 1.0, num_samples)  # Fraction of unstable elements in each system

# Constants for chaos factor scaling
n_chaos = 2  # Non-linearity exponent for instability scaling

# Simulate chaos factor for small and large collections
small_system_results = []
large_system_results = []

for density in density_range:
    for unstable_fraction in unstable_fraction_range:
        # Calculate chaos factor for a small system
        rho_unstable_small = density * unstable_fraction  # Unstable density (small system)
        rho_total_small = density  # Total density (small system)
        chaos_factor_small = (rho_unstable_small / rho_total_small) ** n_chaos

        # Calculate chaos factor for a large system
        rho_unstable_large = 10 * density * unstable_fraction  # Unstable density (large system)
        rho_total_large = 10 * density  # Total density (large system)
        chaos_factor_large = (rho_unstable_large / rho_total_large) ** n_chaos

        # Store results
        small_system_results.append((density, unstable_fraction, chaos_factor_small))
        large_system_results.append((density, unstable_fraction, chaos_factor_large))

# Convert results to NumPy arrays for easier analysis
small_system_results = np.array(small_system_results)
large_system_results = np.array(large_system_results)

# Plot the chaos factors for small and large systems
plt.figure(figsize=(12, 6))

# Chaos factor for small systems
plt.subplot(1, 2, 1)
plt.tricontourf(
    small_system_results[:, 0], small_system_results[:, 1], small_system_results[:, 2], levels=20
)
plt.colorbar(label="Chaos Factor")
plt.title("Chaos Factor: Small Systems")
plt.xlabel("Density")
plt.ylabel("Unstable Fraction")

# Chaos factor for large systems
plt.subplot(1, 2, 2)
plt.tricontourf(
    large_system_results[:, 0], large_system_results[:, 1], large_system_results[:, 2], levels=20
)
plt.colorbar(label="Chaos Factor")
plt.title("Chaos Factor: Large Systems")
plt.xlabel("Density")
plt.ylabel("Unstable Fraction")

plt.tight_layout()
plt.show()