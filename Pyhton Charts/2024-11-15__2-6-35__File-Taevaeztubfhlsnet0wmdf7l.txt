Conversation URL:
https://chatgpt.com/c/674ada8d-7990-8011-a5b4-1474d46314a2

Title:


Prompt:
# Extend the range of masses and potentials to test extreme values
extreme_masses = np.linspace(1e-3, 1e6, 50)  # Very small to very large masses (kg)
extreme_potentials = np.linspace(0.01, 1e4, 50)  # Very small to very large potentials

# Calculate energy using E=mc^2 and the refined formula for extreme values
extreme_e_mc2 = extreme_masses * (3e8**2)  # Einstein's energy formula
extreme_refined_results = np.array(
    [refined_formula(m, p) for m, p in zip(extreme_masses, extreme_potentials)]
)

# Compare the results for extreme values
extreme_deviation = np.abs(extreme_refined_results - extreme_e_mc2) / extreme_e_mc2 * 100  # Percentage deviation

# Plot the comparison
plt.figure(figsize=(14, 7))

# Extreme Comparison: E=mc^2 vs. Refined Formula
plt.subplot(1, 2, 1)
plt.plot(extreme_masses, extreme_e_mc2, label="E=mc^2", color="blue")
plt.plot(extreme_masses, extreme_refined_results, label="Refined Formula", color="orange", linestyle="--")
plt.xlabel("Mass (kg)")
plt.ylabel("Energy (J)")
plt.xscale("log")
plt.yscale("log")
plt.title("Extreme Comparison: E=mc^2 vs Refined Formula")
plt.legend()

# Deviation for Extreme Values
plt.subplot(1, 2, 2)
plt.plot(extreme_masses, extreme_deviation, label="Deviation (%)", color="red")
plt.xlabel("Mass (kg)")
plt.ylabel("Deviation (%)")
plt.xscale("log")
plt.title("Deviation Between Refined Formula and E=mc^2 (Extreme Values)")
plt.axhline(y=5, color="green", linestyle="--", label="Acceptable Deviation Threshold")
plt.legend()

plt.tight_layout()
plt.show()

# Display summary statistics for extreme values
{
    "Max Deviation (%)": np.max(extreme_deviation),
    "Min Deviation (%)": np.min(extreme_deviation),
    "Average Deviation (%)": np.mean(extreme_deviation),
}