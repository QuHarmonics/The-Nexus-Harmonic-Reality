Conversation URL:
https://chatgpt.com/c/674ada8e-d7c0-8011-bfbf-fe8f85f3b90a

Title:


Prompt:
from scipy.integrate import solve_ivp

def navier_stokes_1d(t, y, nu=0.1):
    """
    Simplified 1D Navier-Stokes equation for smoothness testing.
    u_t + u * u_x = nu * u_xx
    Discretized for demonstration purposes.
    """
    # Assuming a simple discretized Laplacian and convection term
    dydt = np.zeros_like(y)
    n = len(y)
    for i in range(1, n - 1):
        dydt[i] = -y[i] * (y[i + 1] - y[i - 1]) / 2 + nu * (y[i + 1] - 2 * y[i] + y[i - 1])
    return dydt

# Initial condition: sinusoidal velocity field
x = np.linspace(0, 2 * np.pi, 100)
u0 = np.sin(x)

# Solve the Navier-Stokes equation over time
solution = solve_ivp(navier_stokes_1d, [0, 10], u0, t_eval=np.linspace(0, 10, 200), args=(0.1,))

# Plot the results
plt.figure(figsize=(10, 6))
for i in range(0, len(solution.t), 20):  # Plot every 20th time step
    plt.plot(x, solution.y[:, i], label=f"t = {solution.t[i]:.2f}")
plt.title("1D Navier-Stokes Smoothness Over Time")
plt.xlabel("x")
plt.ylabel("u")
plt.legend()
plt.grid()
plt.show()