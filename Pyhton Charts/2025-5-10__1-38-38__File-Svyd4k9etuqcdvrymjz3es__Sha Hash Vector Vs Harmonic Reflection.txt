Conversation URL:
https://chatgpt.com/c/675afdc0-74f0-8011-855b-4ca633f20224

Title:
SHA Hash Vector vs Harmonic Reflection

Prompt:
import hashlib
import numpy as np
import matplotlib.pyplot as plt

# Sample input message
original_message = "The harmonic field is recursive."

# Hash using SHA-256
def sha256_hash(message):
    return hashlib.sha256(message.encode()).hexdigest()

# Map hash to numerical vector based on hex digit distribution
def hash_to_vector(sha_hex):
    return np.array([int(char, 16) for char in sha_hex])

# Generate a "reflective mirror" vector using harmonic modulation (e.g., sine)
def reflective_mirror(vector):
    modulation = np.sin(np.linspace(0, 2 * np.pi, len(vector)))
    return vector * modulation

# Compare original and mirrored vector
sha_hex = sha256_hash(original_message)
original_vector = hash_to_vector(sha_hex)
mirrored_vector = reflective_mirror(original_vector)

# Plot both for phase visualization
plt.figure(figsize=(12, 5))
plt.plot(original_vector, label='SHA-256 Hash Vector')
plt.plot(mirrored_vector, label='Recursive Harmonic Mirror', linestyle='--')
plt.title("SHA Hash Vector vs Harmonic Reflection")
plt.xlabel("Index")
plt.ylabel("Amplitude")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()