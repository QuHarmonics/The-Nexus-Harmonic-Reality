Conversation URL:
https://chatgpt.com/c/674ada8d-7eec-8011-8c71-398f12a6c9d1

Title:


Prompt:
import numpy as np
import matplotlib.pyplot as plt

# Define the Kulik Formula components
def quantum_pull(C, k, exponent):
    return k * C**exponent

def kulik_formula(C0, Cf, k, exponent):
    return (Cf - C0) / quantum_pull((Cf + C0) / 2, k, exponent)

# Constants for Earth Formation and Life Emergence
k = 0.1  # Scaling constant
exponent_earth = 2  # Quantum pull exponent for Earth formation
exponent_life = 3  # Quantum pull exponent for life emergence

# Complexity ranges
C0_earth, Cf_earth = 1, 100  # Earth formation complexity
C0_life, Cf_life = 10, 1000  # Life emergence complexity

# Generate data for plotting
C_earth = np.linspace(C0_earth, Cf_earth, 100)
C_life = np.linspace(C0_life, Cf_life, 100)

# Calculate times using the Kulik Formula
T_earth = [kulik_formula(C0_earth, C, k, exponent_earth) for C in C_earth]
T_life = [kulik_formula(C0_life, C, k, exponent_life) for C in C_life]

# Plot the results
plt.figure(figsize=(12, 6))

# Earth formation
plt.plot(C_earth, T_earth, label="Earth Formation", color="blue")

# Life emergence
plt.plot(C_life, T_life, label="Life Emergence", color="green")

# Labels and legend
plt.title("Time vs Complexity Using The Kulik Formula")
plt.xlabel("Complexity (C)")
plt.ylabel("Time (T) in Million Years")
plt.legend()
plt.grid(True)

# Show plot
plt.show()