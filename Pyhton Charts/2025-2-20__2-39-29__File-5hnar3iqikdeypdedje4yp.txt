Conversation URL:
https://chatgpt.com/c/67b6cf81-3b6c-8011-b1de-b90805b612a3

Title:


Prompt:
from collections import Counter

# Compute the first 1000 digits of the Golden Ratio (phi)
mp.dps = 1000  # Set precision to 1000 decimal places
phi_digits_str = str(mp.nstr(phi, 1002))[2:]  # Extract first 1000 digits (skip "1.")

# Convert to numeric list
phi_digits = [int(digit) for digit in phi_digits_str]

# Compute frequency distribution (modular analysis)
digit_counts = Counter(phi_digits)

# Normalize frequencies
total_digits = len(phi_digits)
digit_frequencies = {digit: count / total_digits for digit, count in digit_counts.items()}

# Plot digit frequency distribution
plt.figure(figsize=(10, 5))
plt.bar(digit_frequencies.keys(), digit_frequencies.values(), color='royalblue', alpha=0.8)
plt.xlabel("Digit (0-9)")
plt.ylabel("Normalized Frequency")
plt.title("Digit Frequency Distribution of First 1000 Digits of Golden Ratio (Ï†)")
plt.xticks(range(10))
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Show plot
plt.show()