Conversation URL:
https://chatgpt.com/c/6865b5e2-9d30-8011-85a1-a93501bff102

Title:


Prompt:
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy.signal import lfilter

# Simulation Parameters
timesteps = 100
H_target = 0.35

# Generate synthetic potential (P) values
np.random.seed(0)
P = np.abs(np.random.normal(loc=1.0, scale=0.2, size=10))

# Initialize actualized values A
A = np.zeros((timesteps, len(P)))
A[0] = np.random.normal(loc=0.1, scale=0.05, size=len(P))

# PID parameters for Samson v2
Kp, Ki, Kd = 0.8, 0.1, 0.05

# Containers
H_series = np.zeros(timesteps)
error_series = np.zeros(timesteps)
integral_error = 0
prev_error = 0

# Feedback loop over time using PID
for t in range(1, timesteps):
    H = np.sum(A[t-1]) / np.sum(P)
    error = H_target - H
    integral_error += error
    derivative_error = error - prev_error
    feedback = Kp * error + Ki * integral_error + Kd * derivative_error
    A[t] = A[t-1] + feedback * (P - A[t-1])  # Adjust A toward P using feedback
    H_series[t] = np.sum(A[t]) / np.sum(P)
    error_series[t] = error
    prev_error = error

# Plotting
fig, ax = plt.subplots(2, 1, figsize=(10, 6), sharex=True)

ax[0].plot(H_series, label='H(t) Ratio')
ax[0].axhline(H_target, color='r', linestyle='--', label='Target H=0.35')
ax[0].set_ylabel('Harmonic Ratio H(t)')
ax[0].legend()
ax[0].set_title('Samson v2 Harmonic Regulation: PID Control on H(t)')

ax[1].plot(error_series, label='Error ΔH', color='orange')
ax[1].set_ylabel('ΔH(t)')
ax[1].set_xlabel('Time Step')
ax[1].legend()

plt.tight_layout()
plt.show()