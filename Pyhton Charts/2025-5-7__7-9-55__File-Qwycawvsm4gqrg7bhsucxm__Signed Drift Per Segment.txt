Conversation URL:
https://chatgpt.com/c/681b3cfe-5f60-8011-9fb8-a1d390ffb762

Title:
Signed Drift per Segment

Prompt:
import hashlib
import numpy as np
import matplotlib.pyplot as plt

def sha256_hash_blocks(input_str):
    """
    Compute SHA256 hash and return 8 32-bit segments as integers.
    """
    hash_hex = hashlib.sha256(input_str.encode('utf-8')).hexdigest()
    return [int(hash_hex[i:i+8], 16) for i in range(0, 64, 8)]

# Define two mirror-related strings
input_a = "12345678"
input_b = input_a[::-1]  # Mirror of input_a

# Compute their SHA256 32-bit block segments
blocks_a = sha256_hash_blocks(input_a)
blocks_b = sha256_hash_blocks(input_b)

# Compute signed drift
delta = [b - a for a, b in zip(blocks_a, blocks_b)]

# Compare with mirrored deltas
reflected_delta = delta[::-1]
mirror_check = [delta[i] + delta[7 - i] for i in range(4)]

# FFT Analysis
fft_delta = np.fft.fft(delta)

# Plot the signed drift and its reflection
plt.figure(figsize=(12, 5))
plt.subplot(1, 2, 1)
plt.bar(range(8), delta, label='Δ (signed drift)', color='steelblue')
plt.bar(range(8), reflected_delta, alpha=0.4, label='Mirrored Δ', color='orange')
plt.title('Signed Drift per Segment')
plt.xlabel('Segment Index')
plt.ylabel('Delta Value')
plt.legend()

plt.subplot(1, 2, 2)
plt.stem(np.abs(fft_delta), use_line_collection=True)
plt.title('FFT of Δ (Frequency Domain)')
plt.xlabel('Frequency Bin')
plt.ylabel('Magnitude')

plt.tight_layout()
plt.show()

# Return computed data for inspection
blocks_a, blocks_b, delta, mirror_check