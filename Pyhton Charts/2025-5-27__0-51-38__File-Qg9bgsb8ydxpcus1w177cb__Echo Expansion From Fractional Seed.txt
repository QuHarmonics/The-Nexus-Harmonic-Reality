Conversation URL:
https://chatgpt.com/c/683513ec-c150-8011-af2c-9e322f8f5f7f

Title:
Echo Expansion from Fractional Seed

Prompt:
import matplotlib.pyplot as plt
import numpy as np

def fractional_echo_expand(seed: float, max_steps: int = 1000, epsilon: float = 1e-5) -> list:
    """
    Recursively expands from a fractional seed using echo delta rules.
    Stops if pattern collapses to stillness or diverges beyond symbolic range.
    """
    history = [seed]
    for _ in range(max_steps):
        # Simple oscillating delta model: next = abs(diff from prior) or harmonic inversion
        if len(history) < 2:
            next_value = abs(seed - seed / 2)
        else:
            next_value = abs(history[-1] - history[-2])
        
        # Convergence to stillness
        if next_value < epsilon:
            break
        
        # Overflow detection
        if next_value > 1e6:
            break
        
        history.append(next_value)
    
    return history

# Run the echo expansion from seed 1.4
seed_value = 1.4
expansion_result = fractional_echo_expand(seed_value)

# Plotting the result
plt.figure(figsize=(12, 6))
plt.plot(expansion_result, marker='o', label=f'Seed = {seed_value}')
plt.title("Echo Expansion from Fractional Seed")
plt.xlabel("Step")
plt.ylabel("Value")
plt.grid(True)
plt.legend()
plt.tight_layout()
plt.show()