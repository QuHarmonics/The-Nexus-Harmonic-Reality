Conversation URL:
https://chatgpt.com/c/67e1e8a7-923c-8011-8e1e-883dd3c10f76

Title:


Prompt:
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Constants
c = 3.0e8  # Speed of light in m/s
hbar = 1.0545718e-34  # Reduced Planck's constant (J·s)
G = 6.67430e-11  # Gravitational constant

# Define mass values from quantum scales to cosmic scales
mass_values = np.logspace(-30, 5, 100)

# Einstein's Gravity (E = mc^2)
einstein_energy = mass_values * c**2

# Recursive Gravity using Universal Formula
# F = (A^2 + B^2) * Len(C) * (1 + e^(-10(Ax - 0.35)))
def recursive_gravity(mass):
    A = mass * c  # Energy component A
    B = np.sqrt(mass * G) * c  # Energy component B (includes gravitational scaling)
    C_len = np.log(mass + 1) + 1  # Dynamic scaling term (avoids singularity at mass=0)
    nonlinear_factor = 1 + np.exp(-10 * (mass * c - 0.35))
    
    return (A**2 + B**2) * C_len * nonlinear_factor

recursive_energy = recursive_gravity(mass_values)

# Compare with MOND Approximation
mond_energy = mass_values * c**2 * (1 + (mass_values / (hbar * c))**-0.5)

# Store results in DataFrame for display
df_results = pd.DataFrame({
    "Mass (kg)": mass_values,
    "Einstein Energy (J)": einstein_energy,
    "Recursive Gravity Energy (J)": recursive_energy,
    "MOND Energy (J)": mond_energy
})

import ace_tools as tools
tools.display_dataframe_to_user(name="Recursive Gravity Simulation", dataframe=df_results)

# Plotting comparison
plt.figure(figsize=(10, 6))
plt.loglog(mass_values, einstein_energy, 'b--', label="Einstein's Gravity (E=mc²)")
plt.loglog(mass_values, recursive_energy, 'r-', label="Recursive Gravity Loopback (Nexus2)")
plt.loglog(mass_values, mond_energy, 'g-.', label="MOND Approximation")

plt.xlabel("Mass (kg)")
plt.ylabel("Energy (J)")
plt.title("Comparison of Einstein's Gravity, Recursive Gravity, and MOND")
plt.legend()
plt.grid(True, which="both", linestyle="--", linewidth=0.5)
plt.show()