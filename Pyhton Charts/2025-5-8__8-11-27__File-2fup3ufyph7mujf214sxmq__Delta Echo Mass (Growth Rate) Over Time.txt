Conversation URL:
https://chatgpt.com/c/681c2fab-bcac-8011-a1f1-2cb88df7e489

Title:
Delta Echo Mass (Growth Rate) Over Time

Prompt:
# Re-import necessary libraries after code execution state reset
import numpy as np
import matplotlib.pyplot as plt

# Parameters
L = 8
steps = 400
decimals = 3

# Define direction vectors
directions = {
    "[1.0, 0.5] (folds fast)": np.array([1.0, 0.5]),
    "[3.0, 0.35] (truth-aligns)": np.array([3.0, 0.35]),
    "[1.0, sqrt(2)-1] (irrational push)": np.array([1.0, np.sqrt(2)-1])
}

# Function to run trace and compute echo mass
def compute_echo_mass(direction, steps, L, decimals):
    direction = direction / np.linalg.norm(direction)
    pos = np.array([0.0, 0.0])
    velocity = direction.copy()
    visited = set()
    mass_over_time = []

    for _ in range(steps):
        next_pos = pos + velocity
        for i in range(2):
            if next_pos[i] < 0 or next_pos[i] > L:
                velocity[i] = -velocity[i]
                next_pos = pos + velocity
        rounded = tuple(np.round(next_pos, decimals=decimals))
        visited.add(rounded)
        mass_over_time.append(len(visited))
        pos = next_pos

    return mass_over_time

# Run for each direction
results = {}
for label, dir_vec in directions.items():
    results[label] = compute_echo_mass(dir_vec, steps, L, decimals)

# Compute delta-mass (growth rate)
delta_results = {label: np.gradient(masses) for label, masses in results.items()}

# Plot delta-mass
plt.figure(figsize=(10, 6))
for label, delta in delta_results.items():
    plt.plot(delta, label=label)

plt.title("Delta Echo Mass (Growth Rate) Over Time")
plt.xlabel("Steps")
plt.ylabel("Î” Echo Mass")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()